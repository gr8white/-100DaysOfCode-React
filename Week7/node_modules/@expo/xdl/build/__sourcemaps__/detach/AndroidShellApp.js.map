{"version":3,"sources":["detach/AndroidShellApp.js"],"names":["async","androidSrcPath","shellPath","isDetached","sdkVersion","await","spawnAsyncThrowError","pipeToLogger","loggerFields","buildPhase","cwd","path","join","env","process","copyToShellApp","fileName","fs","copy","e","code","Error","message","parseSdkMajorVersion","remove","copyInitialShellAppFilesAsync","context","fnLogger","logger","withFields","let","shellPathForContext","url","published","manifest","config","releaseChannel","isRunningInUserContext","type","ExponentTools","data","privateConfig","info","fullManifestUrl","replace","versionCode","javaPackage","android","package","name","scheme","detach","bundleUrl","isFullManifest","version","backgroundImages","backgroundImagesForApp","splashBackgroundColor","getSplashScreenBackgroundColor","updatesDisabled","updates","enabled","appBuildGradle","regexFileAsync","deleteLinesInFileAsync","settingsGradle","writeFile","runShPath","pathExists","buildGradleFile","readFileSync","androidVersion","match","shouldShowLoadingView","xmlWeirdAndroidEscape","randomID","uuid","v4","newScheme","newSchemeSuffix","intentFilters","_","get","renderIntentFilters","searchLine","permissions","whitelist","forEach","s","includes","push","blacklist","filter","p","map","writeFileSync","JSON","stringify","saveUrlToPathAsync","createAndWriteIconsToPathAsync","length","globby","absolute","filePath","removeSync","Promise","all","image","resolve","projectPath","AssetBundle","bundleAsync","bundledAssets","certificateHash","googleAndroidApiKey","branch","fabric","googleMaps","googleSignIn","apiKey","buildSecret","googleServicesFile","googleServicesFileContents","readFile","runShellAppModificationsAsync","build","androidBuildConfiguration","gradleBuildCommand","gradleArgs","GRADLE_DAEMON_DISABLED","unshift","ANDROID_KEY_ALIAS","keyAlias","ANDROID_KEY_PASSWORD","keyPassword","ANDROID_KEYSTORE_PATH","keystore","ANDROID_KEYSTORE_PASSWORD","keystorePassword","apkPath","spawnAsync","outputFile","buildShellAppAsync","requiredSdkVersion","filePathsToTransform","expoviewBuildGradle","multipleVersionReactNativeActivity","constants","appAndroidManifest","majorSdkVersion","effectiveSdkVersion","Object","values","removeInvalidSdkLinesWhenPreparingShell","removeObsoleteSdks","modules","enabledModulesDir","packagesDir","ensureSymlink","mkdirp","mod","dirname","prepareEnabledModules","addDetachedConfigToExp","getManifestAsync","imageKeys","exponentDirectory","workingDir","EXPO_UNIVERSE_DIR","original","noAmps","replaceString","noLt","noGt","noApos","exports","updateAndroidShellAppAsync","args","Accept","getRemoteOrLocalUrl","key","basePath","splash","results","reduce","acc","imageKey","drawableDirectory","backgroundColor","resizeMode","createAndroidShellAppAsync","privateConfigFile","configuration","alias","exponentDir","ensureDir","privateConfigContents","parse","buildFlags","StandaloneBuildFlags","createAndroid","StandaloneContext","createServiceContext","skipBuild","expoSourcePath","exp","console","warn","assetsDirectory","publishBundlePath","relative","publishManifestPath","RegExp"],"mappings":"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","file":"../../detach/AndroidShellApp.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n/**\n * @flow\n */\n\n'use strict';\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport replaceString from 'replace-string';\nimport _ from 'lodash';\nimport globby from 'globby';\nimport uuid from 'uuid';\n\nimport { createAndWriteIconsToPathAsync } from './AndroidIcons';\nimport * as AssetBundle from './AssetBundle';\nimport * as ExponentTools from './ExponentTools';\nimport StandaloneBuildFlags from './StandaloneBuildFlags';\nimport StandaloneContext from './StandaloneContext';\nimport renderIntentFilters from './AndroidIntentFilters';\nimport logger from './Logger';\n\nconst {\n  getManifestAsync,\n  saveUrlToPathAsync,\n  spawnAsyncThrowError,\n  spawnAsync,\n  regexFileAsync,\n  deleteLinesInFileAsync,\n  parseSdkMajorVersion,\n} = ExponentTools;\n\nconst imageKeys = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi'];\n\n// Do not call this from anything used by detach\nfunction exponentDirectory(workingDir) {\n  if (workingDir) {\n    return workingDir;\n  } else if (process.env.EXPO_UNIVERSE_DIR) {\n    return path.join(process.env.EXPO_UNIVERSE_DIR, 'exponent');\n  } else {\n    return null;\n  }\n}\n\nfunction xmlWeirdAndroidEscape(original) {\n  let noAmps = replaceString(original, '&', '&amp;');\n  let noLt = replaceString(noAmps, '<', '&lt;');\n  let noGt = replaceString(noLt, '>', '&gt;');\n  let noApos = replaceString(noGt, '\"', '\\\\\"');\n  return replaceString(noApos, \"'\", \"\\\\'\");\n}\n\nexports.updateAndroidShellAppAsync = async function updateAndroidShellAppAsync(args: any) {\n  let { url, sdkVersion, releaseChannel, workingDir } = args;\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest = await getManifestAsync(url, {\n    'Exponent-SDK-Version': sdkVersion,\n    'Exponent-Platform': 'android',\n    'Expo-Release-Channel': releaseChannel,\n    Accept: 'application/expo+json,application/json',\n  });\n\n  let fullManifestUrl = url.replace('exp://', 'https://');\n  let bundleUrl = manifest.bundleUrl;\n\n  let shellPath = path.join(exponentDirectory(workingDir), 'android-shell-app');\n\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'));\n  await fs.writeFileSync(\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n    JSON.stringify(manifest)\n  );\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle'));\n  await saveUrlToPathAsync(\n    bundleUrl,\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n  );\n\n  await deleteLinesInFileAsync(\n    `START EMBEDDED RESPONSES`,\n    `END EMBEDDED RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    '// ADD EMBEDDED RESPONSES HERE',\n    `\n    // ADD EMBEDDED RESPONSES HERE\n    // START EMBEDDED RESPONSES\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));\n    // END EMBEDDED RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n};\n\nfunction getRemoteOrLocalUrl(manifest, key, isDetached) {\n  // in detached apps, `manifest` is actually just app.json, so there are no remote url fields\n  // we should return a local url starting with file:// instead\n  if (isDetached) {\n    return _.get(manifest, key);\n  }\n  return _.get(manifest, `${key}Url`);\n}\n\nfunction backgroundImagesForApp(shellPath, manifest, isDetached, sdkVersion) {\n  // returns an array like:\n  // [\n  //   {url: 'urlToDownload', path: 'pathToSaveTo'},\n  //   {url: 'anotherURlToDownload', path: 'anotherPathToSaveTo'},\n  // ]\n  let basePath = path.join(shellPath, 'app', 'src', 'main', 'res');\n  if (_.get(manifest, 'android.splash')) {\n    const splash = _.get(manifest, 'android.splash');\n    const results = _.reduce(\n      imageKeys,\n      function(acc, imageKey) {\n        let url = getRemoteOrLocalUrl(splash, imageKey, isDetached);\n        if (url) {\n          acc.push({\n            url,\n            path: path.join(basePath, `drawable-${imageKey}`, 'shell_launch_background_image.png'),\n          });\n        }\n\n        return acc;\n      },\n      []\n    );\n\n    // No splash screen images declared in 'android.splash' configuration, proceed to general one\n    if (results.length !== 0) {\n      return results;\n    }\n  }\n\n  let url = getRemoteOrLocalUrl(manifest, 'splash.image', isDetached);\n  if (url) {\n    // since SDK33 background_image placeholder is placed in `mdpi` directory\n    // placeholder is shipped with versioned ExpoView, so we're unable to delete/move it\n    // prior to SDK33 placeholder is in `xxxhdpi` and to be sure that device\n    // is not selecting it as a actual SplashScreen image (according to device's DPI)\n    // we place user-provided image in `xxxhdpi` directory as well\n    const drawableDirectory =\n      parseSdkMajorVersion(sdkVersion) >= 33 ? 'drawable-mdpi' : 'drawable-xxxhdpi';\n    return [\n      {\n        url,\n        path: path.join(basePath, drawableDirectory, 'shell_launch_background_image.png'),\n      },\n    ];\n  }\n\n  return [];\n}\n\nfunction getSplashScreenBackgroundColor(manifest) {\n  let backgroundColor;\n  if (manifest.android && manifest.android.splash && manifest.android.splash.backgroundColor) {\n    backgroundColor = manifest.android.splash.backgroundColor;\n  } else if (manifest.splash && manifest.splash.backgroundColor) {\n    backgroundColor = manifest.splash.backgroundColor;\n  }\n\n  // Default to white\n  if (!backgroundColor) {\n    backgroundColor = '#FFFFFF';\n  }\n  return backgroundColor;\n}\n\n/*\n  if resizeMode is 'contain' (since SDK33) or 'cover' (prior to SDK33) we should show LoadingView:\n  using an ImageView, unlike having a BitmapDrawable\n  provides a fullscreen image without distortions\n*/\nfunction shouldShowLoadingView(manifest, sdkVersion) {\n  const resizeMode =\n    (manifest.android && manifest.android.splash && manifest.android.splash.resizeMode) ||\n    (manifest.splash && manifest.splash.resizeMode);\n\n  return (\n    resizeMode &&\n    (parseSdkMajorVersion(sdkVersion) >= 33 ? resizeMode === 'contain' : resizeMode === 'cover')\n  );\n}\n\nexport async function copyInitialShellAppFilesAsync(\n  androidSrcPath,\n  shellPath,\n  isDetached: boolean,\n  sdkVersion: ?string\n) {\n  if (androidSrcPath && !isDetached) {\n    // check if Android template files exist\n    // since we take out the prebuild step later on\n    // and we should have generated those files earlier\n    await spawnAsyncThrowError('../../tools-public/check-dynamic-macros-android.sh', [], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'confirming that dynamic macros exist' },\n      cwd: path.join(androidSrcPath, 'app'),\n      env: process.env,\n    });\n  }\n\n  const copyToShellApp = async fileName => {\n    try {\n      await fs.copy(path.join(androidSrcPath, fileName), path.join(shellPath, fileName));\n    } catch (e) {\n      // android.iml is only available locally, not on the builders, so don't crash when this happens\n      if (e.code === 'ENOENT') {\n        // Some files are not included in all ExpoKit versions, so this error can be ignored.\n      } else {\n        throw new Error(`Could not copy ${fileName} to shell app directory: ${e.message}`);\n      }\n    }\n  };\n\n  if (!isDetached) {\n    await copyToShellApp('expoview');\n    await copyToShellApp('versioned-abis');\n    await copyToShellApp('ReactCommon');\n    await copyToShellApp('ReactAndroid');\n  }\n\n  await copyToShellApp('android.iml');\n  await copyToShellApp('app');\n  await copyToShellApp('build.gradle');\n  await copyToShellApp('gradle');\n  await copyToShellApp('gradle.properties');\n  await copyToShellApp('gradlew');\n  await copyToShellApp('settings.gradle');\n  await copyToShellApp('debug.keystore');\n  await copyToShellApp('run.sh');\n  await copyToShellApp('maven'); // this is a symlink\n\n  // kernel.android.bundle isn't ever used in standalone apps (at least in kernel v32)\n  // but in order to not change behavior in older SDKs, we'll remove the file only in 32+.\n  if (parseSdkMajorVersion(sdkVersion) >= 32) {\n    try {\n      await fs.remove(path.join(shellPath, 'app/src/main/assets/kernel.android.bundle'));\n    } catch (e) {\n      // let's hope it's just not present in the shell app template\n    }\n  }\n}\n\nexports.createAndroidShellAppAsync = async function createAndroidShellAppAsync(args: any) {\n  let {\n    url,\n    sdkVersion,\n    releaseChannel,\n    privateConfigFile,\n    configuration,\n    keystore,\n    alias,\n    keystorePassword,\n    keyPassword,\n    outputFile,\n    workingDir,\n    modules,\n  } = args;\n\n  const exponentDir = exponentDirectory(workingDir);\n  let androidSrcPath = path.join(exponentDir, 'android');\n  let shellPath = path.join(exponentDir, 'android-shell-app');\n\n  await fs.remove(shellPath);\n  await fs.ensureDir(shellPath);\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest;\n  if (args.manifest) {\n    manifest = args.manifest;\n    logger\n      .withFields({ buildPhase: 'reading manifest' })\n      .info('Using manifest:', JSON.stringify(manifest));\n  } else {\n    manifest = await getManifestAsync(url, {\n      'Exponent-SDK-Version': sdkVersion,\n      'Exponent-Platform': 'android',\n      'Expo-Release-Channel': releaseChannel,\n      Accept: 'application/expo+json,application/json',\n    });\n  }\n\n  configuration = configuration ? configuration : 'Release';\n\n  let privateConfig;\n  if (privateConfigFile) {\n    let privateConfigContents = await fs.readFile(privateConfigFile, 'utf8');\n    privateConfig = JSON.parse(privateConfigContents);\n  } else if (manifest.android) {\n    privateConfig = manifest.android.config;\n  }\n\n  let androidBuildConfiguration;\n  if (keystore && alias && keystorePassword && keyPassword) {\n    androidBuildConfiguration = {\n      keystore,\n      keystorePassword,\n      keyAlias: alias,\n      keyPassword,\n      outputFile,\n    };\n  }\n\n  let buildFlags = StandaloneBuildFlags.createAndroid(configuration, androidBuildConfiguration);\n  let context = StandaloneContext.createServiceContext(\n    androidSrcPath,\n    null,\n    manifest,\n    privateConfig,\n    /* testEnvironment */ 'none',\n    buildFlags,\n    url,\n    releaseChannel\n  );\n\n  await copyInitialShellAppFilesAsync(androidSrcPath, shellPath, false, sdkVersion);\n  await removeObsoleteSdks(shellPath, sdkVersion);\n  await runShellAppModificationsAsync(context, sdkVersion);\n  await prepareEnabledModules(shellPath, modules);\n\n  if (!args.skipBuild) {\n    await buildShellAppAsync(context, sdkVersion);\n  }\n};\n\nfunction shellPathForContext(context: StandaloneContext) {\n  if (context.type === 'user') {\n    return path.join(context.data.projectPath, 'android');\n  } else {\n    return path.join(\n      exponentDirectory(\n        context.data.expoSourcePath && path.join(context.data.expoSourcePath, '..')\n      ),\n      'android-shell-app'\n    );\n  }\n}\n\nexport async function runShellAppModificationsAsync(\n  context: StandaloneContext,\n  sdkVersion: ?string\n) {\n  const fnLogger = logger.withFields({ buildPhase: 'running shell app modifications' });\n\n  let shellPath = shellPathForContext(context);\n  let url: string = context.published.url;\n  let manifest = context.config; // manifest or app.json\n  let releaseChannel = context.published.releaseChannel;\n\n  const isRunningInUserContext = context.type === 'user';\n  // In SDK32 we've unified build process for shell and ejected apps\n  const isDetached = ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32 || isRunningInUserContext;\n\n  if (!context.data.privateConfig) {\n    fnLogger.info('No config file specified.');\n  }\n\n  let fullManifestUrl = url.replace('exp://', 'https://');\n\n  let versionCode = 1;\n  let javaPackage = manifest.android.package;\n  if (manifest.android.versionCode) {\n    versionCode = manifest.android.versionCode;\n  }\n\n  if (!javaPackage) {\n    throw new Error(\n      'Must specify androidPackage option (either from manifest or on command line).'\n    );\n  }\n\n  let name = manifest.name;\n  let scheme = manifest.scheme || (manifest.detach && manifest.detach.scheme);\n  let bundleUrl: ?string = manifest.bundleUrl;\n  let isFullManifest = !!bundleUrl;\n  let version = manifest.version ? manifest.version : '0.0.0';\n  let backgroundImages = backgroundImagesForApp(\n    shellPath,\n    manifest,\n    isRunningInUserContext,\n    sdkVersion\n  );\n  let splashBackgroundColor = getSplashScreenBackgroundColor(manifest);\n  let updatesDisabled = manifest.updates && manifest.updates.enabled === false;\n\n  // Clean build directories\n  await fs.remove(path.join(shellPath, 'app', 'build'));\n  await fs.remove(path.join(shellPath, 'ReactAndroid', 'build'));\n  await fs.remove(path.join(shellPath, 'expoview', 'build'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'test'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'androidTest'));\n\n  if (isDetached) {\n    let appBuildGradle = path.join(shellPath, 'app', 'build.gradle');\n    if (isRunningInUserContext) {\n      await regexFileAsync(/\\/\\* UNCOMMENT WHEN DETACHING/g, '', appBuildGradle);\n      await regexFileAsync(/END UNCOMMENT WHEN DETACHING \\*\\//g, '', appBuildGradle);\n      await deleteLinesInFileAsync(\n        'WHEN_DETACHING_REMOVE_FROM_HERE',\n        'WHEN_DETACHING_REMOVE_TO_HERE',\n        appBuildGradle\n      );\n    }\n    await regexFileAsync(/\\/\\* UNCOMMENT WHEN DISTRIBUTING/g, '', appBuildGradle);\n    await regexFileAsync(/END UNCOMMENT WHEN DISTRIBUTING \\*\\//g, '', appBuildGradle);\n    await deleteLinesInFileAsync(\n      'WHEN_DISTRIBUTING_REMOVE_FROM_HERE',\n      'WHEN_DISTRIBUTING_REMOVE_TO_HERE',\n      appBuildGradle\n    );\n\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 33) {\n      let settingsGradle = path.join(shellPath, 'settings.gradle');\n      await deleteLinesInFileAsync(\n        'WHEN_DISTRIBUTING_REMOVE_FROM_HERE',\n        'WHEN_DISTRIBUTING_REMOVE_TO_HERE',\n        settingsGradle\n      );\n    } else {\n      // Don't need to compile expoview or ReactAndroid\n      // react-native link looks for a \\n so we need that. See https://github.com/facebook/react-native/blob/master/local-cli/link/android/patches/makeSettingsPatch.js\n      await fs.writeFile(path.join(shellPath, 'settings.gradle'), `include ':app'\\n`);\n    }\n\n    await regexFileAsync(\n      'TEMPLATE_INITIAL_URL',\n      url,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'MainActivity.java'\n      )\n    );\n\n    const runShPath = path.join(shellPath, 'run.sh');\n    if (await fs.pathExists(runShPath)) {\n      await regexFileAsync('host.exp.exponent/', `${javaPackage}/`, runShPath);\n      await regexFileAsync('LauncherActivity', 'MainActivity', runShPath);\n    }\n  }\n\n  // Package\n  await regexFileAsync(\n    `applicationId 'host.exp.exponent'`,\n    `applicationId '${javaPackage}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    `android:name=\"host.exp.exponent\"`,\n    `android:name=\"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Versions\n  let buildGradleFile = await fs.readFileSync(path.join(shellPath, 'app', 'build.gradle'), 'utf8');\n  let androidVersion = buildGradleFile.match(/versionName '(\\S+)'/)[1];\n  await regexFileAsync(\n    'VERSION_NAME = null',\n    `VERSION_NAME = \"${androidVersion}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  await deleteLinesInFileAsync(\n    `BEGIN VERSIONS`,\n    `END VERSIONS`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    '// ADD VERSIONS HERE',\n    `versionCode ${versionCode}\n    versionName '${version}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Remove Exponent build script, since SDK32 expoview comes precompiled\n  if (parseSdkMajorVersion(sdkVersion) < 32 && !isRunningInUserContext) {\n    await regexFileAsync(\n      `preBuild.dependsOn generateDynamicMacros`,\n      ``,\n      path.join(shellPath, 'expoview', 'build.gradle')\n    );\n  }\n\n  // change javaMaxHeapSize\n  await regexFileAsync(\n    `javaMaxHeapSize \"8g\"`,\n    `javaMaxHeapSize \"6g\"`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Push notifications\n  await regexFileAsync(\n    '\"package_name\": \"host.exp.exponent\"',\n    `\"package_name\": \"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  ); // TODO: actually use the correct file\n\n  // TODO: probably don't need this in both places\n  await regexFileAsync(\n    /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n    `${javaPackage}.permission.C2D_MESSAGE`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n  // Since SDK32 expoview comes precompiled\n  if (parseSdkMajorVersion(sdkVersion) < 32 && !isRunningInUserContext) {\n    await regexFileAsync(\n      /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n      `${javaPackage}.permission.C2D_MESSAGE`,\n      path.join(shellPath, 'expoview', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Set INITIAL_URL, SHELL_APP_SCHEME and SHOW_LOADING_VIEW\n  await regexFileAsync(\n    'INITIAL_URL = null',\n    `INITIAL_URL = \"${url}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  if (scheme) {\n    await regexFileAsync(\n      'SHELL_APP_SCHEME = null',\n      `SHELL_APP_SCHEME = \"${scheme}\"`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // Handle 'contain' splashScreen mode by showing only background color and then actual splashScreen image inside AppLoadingView\n  if (shouldShowLoadingView(manifest, sdkVersion)) {\n    await regexFileAsync(\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = false',\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = true',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n\n    // show only background color if LoadingView will appear\n    await regexFileAsync(\n      /<item>.*<\\/item>/,\n      '',\n      path.join(shellPath, 'app', 'src', 'main', 'res', 'drawable', 'splash_background.xml')\n    );\n  }\n\n  // In SDK32 this field got removed from AppConstants\n  if (parseSdkMajorVersion(sdkVersion) < 32 && isRunningInUserContext) {\n    await regexFileAsync(\n      'IS_DETACHED = false',\n      `IS_DETACHED = true`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (updatesDisabled) {\n    await regexFileAsync(\n      'ARE_REMOTE_UPDATES_ENABLED = true',\n      'ARE_REMOTE_UPDATES_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // App name\n  await regexFileAsync(\n    '\"app_name\">Expo',\n    `\"app_name\">${xmlWeirdAndroidEscape(name)}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'strings.xml')\n  );\n\n  // Splash Screen background color\n  await regexFileAsync(\n    '\"splashBackground\">#FFFFFF',\n    `\"splashBackground\">${splashBackgroundColor}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'colors.xml')\n  );\n\n  // Change stripe schemes and add meta-data\n  const randomID = uuid.v4();\n  const newScheme = `<meta-data android:name=\"standaloneStripeScheme\" android:value=\"${randomID}\" />`;\n  await regexFileAsync(\n    '<!-- ADD HERE STRIPE SCHEME META DATA -->',\n    newScheme,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  const newSchemeSuffix = `expo.modules.payments.stripe.${randomID}\" />`;\n  await regexFileAsync(\n    'expo.modules.payments.stripe\" />',\n    newSchemeSuffix,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove exp:// scheme from LauncherActivity\n  await deleteLinesInFileAsync(\n    `START LAUNCHER INTENT FILTERS`,\n    `END LAUNCHER INTENT FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove LAUNCHER category from HomeActivity\n  await deleteLinesInFileAsync(\n    `START HOME INTENT FILTERS`,\n    `END HOME INTENT FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  if (isDetached) {\n    // Add LAUNCHER category to MainActivity\n    await regexFileAsync(\n      '<!-- ADD DETACH INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  } else {\n    // Add LAUNCHER category to ShellAppActivity\n    await regexFileAsync(\n      '<!-- ADD SHELL INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add app-specific intent filters\n  const intentFilters = _.get(manifest, 'android.intentFilters');\n  if (intentFilters) {\n    if (isDetached) {\n      await regexFileAsync(\n        '<!-- ADD DETACH APP SPECIFIC INTENT FILTERS -->',\n        renderIntentFilters(intentFilters).join('\\n'),\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    } else {\n      await regexFileAsync(\n        '<!-- ADD SHELL APP SPECIFIC INTENT FILTERS -->',\n        renderIntentFilters(intentFilters).join('\\n'),\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n  }\n\n  // Add shell app scheme\n  if (scheme) {\n    const searchLine = isDetached\n      ? '<!-- ADD DETACH SCHEME HERE -->'\n      : '<!-- ADD SHELL SCHEME HERE -->';\n    await regexFileAsync(\n      searchLine,\n      `<intent-filter>\n        <data android:scheme=\"${scheme}\"/>\n\n        <action android:name=\"android.intent.action.VIEW\"/>\n\n        <category android:name=\"android.intent.category.DEFAULT\"/>\n        <category android:name=\"android.intent.category.BROWSABLE\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add permissions\n  if (manifest.android && manifest.android.permissions) {\n    const whitelist = [];\n\n    manifest.android.permissions.forEach(s => {\n      if (s.includes('.')) {\n        whitelist.push(s);\n      } else {\n        // If shorthand form like `WRITE_CONTACTS` is provided, expand it to `android.permission.WRITE_CONTACTS`.\n        whitelist.push(`android.permission.${s}`);\n      }\n    });\n\n    // Permissions we need to remove from the generated manifest\n    const blacklist = [\n      'android.permission.ACCESS_COARSE_LOCATION',\n      'android.permission.ACCESS_FINE_LOCATION',\n      'android.permission.CAMERA',\n      'android.permission.MANAGE_DOCUMENTS',\n      'android.permission.READ_CONTACTS',\n      'android.permission.WRITE_CONTACTS',\n      'android.permission.READ_CALENDAR',\n      'android.permission.WRITE_CALENDAR',\n      'android.permission.READ_EXTERNAL_STORAGE',\n      'android.permission.READ_INTERNAL_STORAGE',\n      'android.permission.READ_PHONE_STATE',\n      'android.permission.RECORD_AUDIO',\n      'android.permission.USE_FINGERPRINT',\n      'android.permission.VIBRATE',\n      'android.permission.WRITE_EXTERNAL_STORAGE',\n      'android.permission.READ_SMS',\n      'com.anddoes.launcher.permission.UPDATE_COUNT',\n      'com.android.launcher.permission.INSTALL_SHORTCUT',\n      'com.google.android.gms.permission.ACTIVITY_RECOGNITION',\n      'com.google.android.providers.gsf.permission.READ_GSERVICES',\n      'com.htc.launcher.permission.READ_SETTINGS',\n      'com.htc.launcher.permission.UPDATE_SHORTCUT',\n      'com.majeur.launcher.permission.UPDATE_BADGE',\n      'com.sec.android.provider.badge.permission.READ',\n      'com.sec.android.provider.badge.permission.WRITE',\n      'com.sonyericsson.home.permission.BROADCAST_BADGE',\n    ].filter(p => !whitelist.includes(p));\n\n    await deleteLinesInFileAsync(\n      `BEGIN OPTIONAL PERMISSIONS`,\n      `END OPTIONAL PERMISSIONS`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n\n    await regexFileAsync(\n      '<!-- ADD PERMISSIONS HERE -->',\n      `\n      ${whitelist.map(p => `<uses-permission android:name=\"${p}\" />`).join('\\n')}\n      ${blacklist\n        .map(p => `<uses-permission android:name=\"${p}\" tools:node=\"remove\" />`)\n        .join('\\n')}\n      `,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // OAuth redirect scheme\n  await regexFileAsync(\n    '<data android:scheme=\"host.exp.exponent\" android:path=\"oauthredirect\"/>',\n    `<data android:scheme=\"${javaPackage}\" android:path=\"oauthredirect\"/>`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Embed manifest and bundle\n  if (isFullManifest) {\n    await fs.writeFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n      JSON.stringify(manifest)\n    );\n    await saveUrlToPathAsync(\n      bundleUrl,\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n    );\n\n    await regexFileAsync(\n      '// START EMBEDDED RESPONSES',\n      `\n      // START EMBEDDED RESPONSES\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  // Icons\n  createAndWriteIconsToPathAsync(\n    context,\n    path.join(shellPath, 'app', 'src', 'main', 'res'),\n    isRunningInUserContext\n  );\n\n  // Splash Background\n  if (backgroundImages && backgroundImages.length > 0) {\n    // Delete the placeholder images\n    (await globby(['**/shell_launch_background_image.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    await Promise.all(\n      backgroundImages.map(async image => {\n        if (isRunningInUserContext) {\n          // local file so just copy it\n          await fs.copy(path.resolve(context.data.projectPath, image.url), image.path);\n        } else {\n          await saveUrlToPathAsync(image.url, image.path);\n        }\n      })\n    );\n  }\n\n  await AssetBundle.bundleAsync(\n    context,\n    manifest.bundledAssets,\n    `${shellPath}/app/src/main/assets`\n  );\n\n  let certificateHash = '';\n  let googleAndroidApiKey = '';\n  let privateConfig = context.data.privateConfig;\n  if (privateConfig) {\n    let branch = privateConfig.branch;\n    let fabric = privateConfig.fabric;\n    let googleMaps = privateConfig.googleMaps;\n    let googleSignIn = privateConfig.googleSignIn;\n\n    // Branch\n    if (branch) {\n      await regexFileAsync(\n        '<!-- ADD BRANCH CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.branch.sdk.BranchKey\"\n      android:value=\"${branch.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Fabric\n    if (fabric) {\n      await fs.remove(path.join(shellPath, 'app', 'fabric.properties'));\n      await fs.writeFileSync(\n        path.join(shellPath, 'app', 'fabric.properties'),\n        `apiSecret=${fabric.buildSecret}\\n`\n      );\n\n      await deleteLinesInFileAsync(\n        `BEGIN FABRIC CONFIG`,\n        `END FABRIC CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD FABRIC CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.fabric.ApiKey\"\n      android:value=\"${fabric.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Maps\n    if (googleMaps) {\n      await deleteLinesInFileAsync(\n        `BEGIN GOOGLE MAPS CONFIG`,\n        `END GOOGLE MAPS CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD GOOGLE MAPS CONFIG HERE -->',\n        `<meta-data\n      android:name=\"com.google.android.geo.API_KEY\"\n      android:value=\"${googleMaps.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Login\n    if (googleSignIn) {\n      certificateHash = googleSignIn.certificateHash;\n      googleAndroidApiKey = googleSignIn.apiKey;\n    }\n  }\n\n  if (manifest.android && manifest.android.googleServicesFile) {\n    // google-services.json\n    // Used for configuring FCM\n    let googleServicesFileContents = manifest.android.googleServicesFile;\n    if (isRunningInUserContext) {\n      googleServicesFileContents = await fs.readFile(\n        path.resolve(shellPath, '..', manifest.android.googleServicesFile),\n        'utf8'\n      );\n    }\n    await fs.writeFile(\n      path.join(shellPath, 'app', 'google-services.json'),\n      googleServicesFileContents\n    );\n  } else {\n    await regexFileAsync(\n      'FCM_ENABLED = true',\n      'FCM_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // Google sign in\n  await regexFileAsync(\n    /\"current_key\": \"(.*?)\"/,\n    `\"current_key\": \"${googleAndroidApiKey}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n  await regexFileAsync(\n    /\"certificate_hash\": \"(.*?)\"/,\n    `\"certificate_hash\": \"${certificateHash}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n}\n\nasync function buildShellAppAsync(context: StandaloneContext, sdkVersion: string) {\n  let shellPath = shellPathForContext(context);\n\n  if (context.build.android) {\n    let androidBuildConfiguration = context.build.android;\n\n    try {\n      await fs.remove(`shell-unaligned.apk`);\n      await fs.remove(`shell.apk`);\n    } catch (e) {}\n    let gradleBuildCommand;\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 33) {\n      gradleBuildCommand = 'assembleRelease';\n    } else if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      gradleBuildCommand = 'assembleProdKernelRelease';\n    } else {\n      gradleBuildCommand = 'assembleProdMinSdkProdKernelRelease';\n    }\n    const gradleArgs = [gradleBuildCommand];\n    if (process.env.GRADLE_DAEMON_DISABLED) {\n      gradleArgs.unshift('--no-daemon');\n    }\n    await spawnAsyncThrowError(`./gradlew`, gradleArgs, {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n      env: {\n        ...process.env,\n        ANDROID_KEY_ALIAS: androidBuildConfiguration.keyAlias,\n        ANDROID_KEY_PASSWORD: androidBuildConfiguration.keyPassword,\n        ANDROID_KEYSTORE_PATH: androidBuildConfiguration.keystore,\n        ANDROID_KEYSTORE_PASSWORD: androidBuildConfiguration.keystorePassword,\n      },\n    });\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      let apkPath;\n      if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 33) {\n        apkPath = path.join(\n          shellPath,\n          'app',\n          'build',\n          'outputs',\n          'apk',\n          'release',\n          'app-release.apk'\n        );\n      } else {\n        apkPath = path.join(\n          shellPath,\n          'app',\n          'build',\n          'outputs',\n          'apk',\n          'prodKernel',\n          'release',\n          'app-prodKernel-release.apk'\n        );\n      }\n      await fs.copy(apkPath, 'shell.apk');\n      // -c means \"only verify\"\n      await spawnAsync(`zipalign`, ['-c', '-v', '4', 'shell.apk'], {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk alignment' },\n      });\n    } else {\n      await fs.copy(\n        path.join(\n          shellPath,\n          'app',\n          'build',\n          'outputs',\n          'apk',\n          'prodMinSdkProdKernel',\n          'release',\n          'app-prodMinSdk-prodKernel-release-unsigned.apk'\n        ),\n        `shell-unaligned.apk`\n      );\n      await spawnAsync(\n        `jarsigner`,\n        [\n          '-verbose',\n          '-sigalg',\n          'SHA1withRSA',\n          '-digestalg',\n          'SHA1',\n          '-storepass',\n          androidBuildConfiguration.keystorePassword,\n          '-keypass',\n          androidBuildConfiguration.keyPassword,\n          '-keystore',\n          androidBuildConfiguration.keystore,\n          'shell-unaligned.apk',\n          androidBuildConfiguration.keyAlias,\n        ],\n        {\n          pipeToLogger: true,\n          loggerFields: { buildPhase: 'signing created apk' },\n        }\n      );\n      await spawnAsync(`zipalign`, ['-v', '4', 'shell-unaligned.apk', 'shell.apk'], {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk alignment' },\n      });\n      try {\n        await fs.remove('shell-unaligned.apk');\n      } catch (e) {}\n    }\n    await spawnAsync(\n      `jarsigner`,\n      [\n        '-verify',\n        '-verbose',\n        '-certs',\n        '-keystore',\n        androidBuildConfiguration.keystore,\n        'shell.apk',\n      ],\n      {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk' },\n      }\n    );\n    await fs.copy('shell.apk', androidBuildConfiguration.outputFile || '/tmp/shell-signed.apk');\n  } else {\n    try {\n      await fs.remove('shell-debug.apk');\n    } catch (e) {}\n    let gradleBuildCommand;\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 33) {\n      gradleBuildCommand = 'assembleDebug';\n    } else if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      gradleBuildCommand = 'assembleDevKernelDebug';\n    } else {\n      gradleBuildCommand = 'assembleDevMinSdkDevKernelDebug';\n    }\n    await spawnAsyncThrowError(`./gradlew`, [gradleBuildCommand], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n    });\n    let apkPath;\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 33) {\n      apkPath = path.join(shellPath, 'app', 'build', 'outputs', 'apk', 'debug', 'app-debug.apk');\n    } else if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      apkPath = path.join(\n        shellPath,\n        'app',\n        'build',\n        'outputs',\n        'apk',\n        'devKernel',\n        'debug',\n        'app-devKernel-debug.apk'\n      );\n    } else {\n      apkPath = path.join(\n        shellPath,\n        'app',\n        'build',\n        'outputs',\n        'apk',\n        'devMinSdkDevKernel',\n        'debug',\n        'app-devMinSdk-devKernel-debug.apk'\n      );\n    }\n    await fs.copy(apkPath, `/tmp/shell-debug.apk`);\n  }\n}\n\nexport function addDetachedConfigToExp(exp: Object, context: StandaloneContext): Object {\n  if (context.type !== 'user') {\n    console.warn(`Tried to modify exp for a non-user StandaloneContext, ignoring`);\n    return exp;\n  }\n  let shellPath = shellPathForContext(context);\n  let assetsDirectory = path.join(shellPath, 'app', 'src', 'main', 'assets');\n  exp.android.publishBundlePath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app.bundle')\n  );\n  exp.android.publishManifestPath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app-manifest.json')\n  );\n  return exp;\n}\n\n/**\n\nSome files in `android` directory have the following patterns of code:\n\n```\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE\n\n// BEGIN_SDK_30\nsome SDK 30-specific code\n// END_SDK_30\n\n// BEGIN_SDK_29\nsome SDK 29-specific code\n// END_SDK_29\n\n...\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE\n```\n\nThe following function replaces all `BEGIN_SDK_XX` with `REMOVE_TO_HERE`\nand all `END_SDK_XX` with `REMOVE_FROM_HERE`, so after the change the code above would read:\n\n```\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE       <--- changed\nsome SDK 30-specific code\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE     <--- changed\n\n// BEGIN_SDK_29\nsome SDK 29-specific code\n// END_SDK_29\n\n...\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE\n```\n\nThis allows us to use `deleteLinesInFileAsync` function to remove obsolete SDKs code easily.\n\n */\nconst removeInvalidSdkLinesWhenPreparingShell = async (majorSdkVersion, filePath) => {\n  await regexFileAsync(\n    new RegExp(`BEGIN_SDK_${majorSdkVersion}`, 'g'),\n    `WHEN_PREPARING_SHELL_REMOVE_TO_HERE`,\n    filePath\n  );\n  await regexFileAsync(\n    new RegExp(`END_SDK_${majorSdkVersion}`, 'g'),\n    `WHEN_PREPARING_SHELL_REMOVE_FROM_HERE`,\n    filePath\n  );\n  await deleteLinesInFileAsync(\n    /WHEN_PREPARING_SHELL_REMOVE_FROM_HERE/g,\n    'WHEN_PREPARING_SHELL_REMOVE_TO_HERE',\n    filePath\n  );\n};\n\nasync function removeObsoleteSdks(shellPath: string, requiredSdkVersion: string) {\n  const filePathsToTransform = {\n    // Remove obsolete `expoview-abiXX_X_X` dependencies\n    appBuildGradle: path.join(shellPath, 'app/build.gradle'),\n    // Remove obsolete `host.exp.exponent:reactandroid:XX.X.X` dependencies from expoview\n    expoviewBuildGradle: path.join(shellPath, 'expoview/build.gradle'),\n    // Remove no-longer-valid interfaces from MultipleVersionReactNativeActivity\n    multipleVersionReactNativeActivity: path.join(\n      shellPath,\n      'expoview/src/main/java/host/exp/exponent/experience/MultipleVersionReactNativeActivity.java'\n    ),\n    // Remove invalid ABI versions from Constants\n    constants: path.join(shellPath, 'expoview/src/main/java/host/exp/exponent/Constants.java'),\n    // Remove non-existent DevSettingsActivities\n    appAndroidManifest: path.join(shellPath, 'app/src/main/AndroidManifest.xml'),\n  };\n\n  const majorSdkVersion = parseSdkMajorVersion(requiredSdkVersion);\n\n  // The single SDK change will happen when transitioning from SDK 30 to 31.\n  // Since SDK 31 there will be no versioned ABIs in shell applications, only unversioned one.\n  // And as such, we will treat the unversioned ABI as the SDK one by assigning TEMPORARY_ABI_VERSION.\n  const effectiveSdkVersion = majorSdkVersion > 30 ? 'UNVERSIONED' : `${majorSdkVersion}`;\n\n  if (effectiveSdkVersion === 'UNVERSIONED') {\n    await regexFileAsync(\n      'TEMPORARY_ABI_VERSION = null;',\n      `TEMPORARY_ABI_VERSION = \"${requiredSdkVersion}\";`,\n      filePathsToTransform.constants\n    );\n  }\n\n  await Promise.all(\n    Object.values(filePathsToTransform).map(filePath =>\n      removeInvalidSdkLinesWhenPreparingShell(effectiveSdkVersion, filePath)\n    )\n  );\n}\n\nasync function prepareEnabledModules(\n  shellPath: string,\n  modules?: Array<{ name: string, version: string, dirname: string }>\n) {\n  const enabledModulesDir = path.join(shellPath, 'enabled-modules');\n  const packagesDir = path.join(shellPath, '..', 'packages');\n  await fs.remove(enabledModulesDir);\n  if (!modules) {\n    await fs.ensureSymlink(packagesDir, enabledModulesDir);\n  } else {\n    await fs.mkdirp(enabledModulesDir);\n    await Promise.all(\n      modules.map(mod =>\n        fs.ensureSymlink(\n          path.join(packagesDir, mod.dirname),\n          path.join(enabledModulesDir, mod.dirname)\n        )\n      )\n    );\n  }\n}\n"],"sourceRoot":"/@expo/xdl@54.0.4/src"}